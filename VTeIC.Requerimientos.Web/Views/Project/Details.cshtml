@using VTeIC.Requerimientos.Web.ViewModels;
@model ProjectViewModel

@{
    ViewBag.Title = "Detalles";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Inicio", "Index", "Home")</li>
    <li>@Html.ActionLink("Proyectos", "Index", "Project")</li>
    <li class="active">@Model.Nombre</li>
    <li class="active">Detalles</li>
</ol>

<div class="page-header">
    <h2>Detalles del proyecto</h2>
</div>

<table class="table no-border-top">
    <tbody>
        <tr>
            <td class="horizontal-th">@Html.DisplayNameFor(model => model.Nombre)</td>
            <td>@Html.DisplayFor(model => model.Nombre)</td>
        </tr>
        <tr>
            <td class="horizontal-th">@Html.DisplayNameFor(model => model.Directorio)</td>
            <td>@Html.DisplayFor(model => model.Directorio)</td>

        </tr>
        <tr>
            <td class="horizontal-th">@Html.DisplayNameFor(model => model.State)</td>
            <td>@Html.DisplayFor(model => model.State)</td>
        </tr>

        @if (!Model.StateReason.IsEmpty())
        {
            <tr>
                <td class="horizontal-th">@Html.DisplayNameFor(model => model.StateReason)</td>
                <td>@Html.DisplayFor(model => model.StateReason)</td>
            </tr>
        }

        @if (Model.SearchKeys.Any())
        {
            <tr>
                <td class="horizontal-th">Claves de búsqueda</td>
                <td>
                    <table class="table no-border-top">
                        <tbody>
                            @{ int i = 0; }
                            @foreach (var s in Model.SearchKeys)
                            {
                                <tr>
                                    <td>@(++i)</td>
                                    <td>@s</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </tbody>
</table>

<p><a href="@Url.Action("Index")" class="btn btn-info">Volver</a></p>
