@model VTeIC.Requerimientos.Entidades.Question

@{
    ViewBag.Title = "Añadir pregunta";
}

<h2>Añadir pregunta</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Text, "Texto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text)
                @Html.ValidationMessageFor(model => model.Text)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionType, "Tipo de pregunta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QuestionTypeId", null, new { @onchange = "s=$('#nq'); if(this.value == 2) s.show(); else s.hide();"})
                @Html.ValidationMessageFor(model => model.QuestionType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NextQuestionId, "Siguiente pregunta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NextQuestionId", String.Empty)
                @Html.ValidationMessageFor(model => model.NextQuestionId)
            </div>
        </div>

        <div class="form-group" id="nq" style="display: none">
            @Html.LabelFor(model => model.NextQuestionNegativeId, "Siguiente pregunta por negación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NextQuestionNegativeId", String.Empty)
                @Html.ValidationMessageFor(model => model.NextQuestionNegativeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPivot, "¿Pregunta pivot?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsPivot)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, "Peso", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Añadir" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
